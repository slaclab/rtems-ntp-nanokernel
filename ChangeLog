2008/09/22 (TS):
	- added support for independent socket to be used for communicating
	  with the server.
2008/05/12 (TS):
	- added support for leap-seconds. Leap-seconds announced by the NTP
	  server are now passed to the ticker (via ntp_adjtime + STA_INS/STA_DEL)
	  on the last day of june/december).
	- changed daemon algorithm: always do 3 shots at the server and
	  use the best one (min. round-trip time) for synchronization.
	  [rtems_bsdnet_get_ntp() should probably be changed to always
	  query multiple servers so we can use the best one instead of the
	  first one.]
	- fixed ld2 algorithm (secs2tcld) when calculating the time-constant.
	  Would return too big a value when 'secs' argument was not a power
	  of two.
	- compute maxerr / esterr (use algorithm similar to ntpd) and
	  pass to ntp_adjtime to give better statistics.
2008/04/10 (TS):
	- maintain STA_UNSYNC bit so that ntp_gettime fails when we cannot
	  contact the NTP server. The daemon now should update this bit whenever
	  it loses or regains connection with the server.
2008/03/25 (TS):
	- rtems 4.8.99 has no BSP_Configuration anymore; use 
	  'rtems_configuration_get_microseconds_per_tick()' instead.
2007/09/18 (TS):
	- Fixed time-const -> seconds conversion; needs to be multiplied by 16.
	- Added PCC implementation for x86 ( >= pentium; rdtsc is not available
	  on i386, i486).
	- added pcc-host.h (for kern.c host test program)
	- added more debugging info.
2007/07/15 (TS):
	- Changes to rtems daemon and ticker:
		* Use shorter default poll/sync
		  interval to match the default timeconstant (per Mills paper).
		* make daemon task id public.
		* make PPC-specific snippets #ifdef __PPC__ only.
		* more accurate conversion of seconds to LD of time-constant.
		  Closer to rounding rather than truncating.
		* changed return value of nano_time() from pcc_t to long.
2007/07/15 (TS):
	- Various (small) changes to host test program:
		* use -fno-common (and a few explicit ini- statements) to make sure
		  all variables are initialized to zero.
		  This resolved strange effects (different results for different
		  runs with same parameters) which were traced to undef.
		  initialization states.
		* added '-P' option so that poll-interval can be set independent
		  of PLL time-constant.
		* call 'display()' at every 'tick' rather than only when poll-interval
		  expires.
2007/07/02 (TS):
	- install timex.h into include/sys
2007/06/22 (TS):
	- removed global 'poll-interval' variable. We should use the NTP
	  internal that can be set via ntp_adjtime() so that NTP knows
	  what the poll interval is.
